#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

&mt { tapping-term-ms = <100>; };

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };

        new_behavior_hold_tap: new_behavior_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR_HOLD_TAP";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    keymap {
        compatible = "zmk,keymap";

        ERGOL {
            display-name = "ergol";
            bindings = <
&kp TAB         &kp Q  &kp W                              &kp E                              &kp R                                  &kp T                                     &kp C_VOLUME_UP              &kp Y        &kp U                                  &kp I                              &kp O                              &kp P     &kp ESCAPE
&kp LEFT_SHIFT  &kp A  &new_behavior_hold_tap LEFT_ALT S  &new_behavior_hold_tap LEFT_GUI D  &new_behavior_hold_tap LEFT_CONTROL F  &kp G                         &bt BT_PRV  &bt BT_DISC 0    &bt BT_NXT  &kp H        &new_behavior_hold_tap LEFT_CONTROL J  &new_behavior_hold_tap LEFT_GUI K  &new_behavior_hold_tap LEFT_ALT L  &kp SEMI  &kp SPACE
&kp LCTRL       &kp Z  &kp X                              &kp C                              &kp V                                  &kp B            &kp SPACE                &kp C_VOL_DN                 &kp N        &kp M                                  &kp COMMA                          &kp DOT                            &kp FSLH  &kp LEFT_GUI
                                                          &to 2                              &kp LEFT_SHIFT                         &lt 1 BACKSPACE                                                        &lt 1 SPACE  &kp ENTER                              &kp RALT
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        NAV {
            bindings = <
&trans  &kp TAB     &kp HOME           &kp UP      &kp END          &kp PG_UP                      &rgb_ug RGB_BRI          &kp FSLH   &kp N7   &kp N8  &kp N9  &trans        &trans
&trans  &kp LSHIFT  &kp LEFT           &kp DOWN    &kp RIGHT        &kp PG_DN              &trans  &rgb_ug RGB_TOG  &trans  &kp MINUS  &kp N4   &kp N5  &kp N6  &kp NUMBER_0  &trans
&trans  &trans      &kp C_VOLUME_DOWN  &kp K_MUTE  &kp C_VOLUME_UP  &trans     &kp LGUI            &rgb_ug RGB_BRD          &kp COMMA  &kp N1   &kp N2  &kp N3  &kp DOT       &trans
                                       &trans      &kp TAB          &trans                                                  &trans     &kp TAB  &trans
            >;

            label = "nav";
        };

        AZERTY {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E  &kp R           &kp T                       &trans          &kp Y      &kp U    &kp I      &kp O    &kp P     &kp ESC
&kp LSHFT  &kp A  &kp S  &kp D  &kp F           &kp G               &trans  &trans  &trans  &kp H      &kp J    &kp K      &kp L    &kp SEMI  &kp SPACE
&kp LCTRL  &kp Z  &kp X  &kp C  &kp V           &kp B     &trans            &trans          &kp N      &kp M    &kp COMMA  &kp DOT  &kp FSLH  &kp LGUI
                         &to 0  &kp LEFT_SHIFT  &kp BSPC                                    &kp SPACE  &kp RET  &trans
            >;

            label = "azerty";
        };
    };
};
